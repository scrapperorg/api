version: '3.7'

services:
  postgres:
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${MIKRO_ORM_USER}
      - POSTGRES_PASSWORD=${MIKRO_ORM_PASSWORD}
      - POSTGRES_DB=${MIKRO_ORM_DB_NAME}
    volumes:
      - postgres-volume:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_USERNAME=kibana_system
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    command: >
      bash -c '
        bin/elasticsearch-users useradd ${KIBANA_USER} -p ${KIBANA_PASSWORD} -r kibana_system || echo "Kibana user already exists.";
        bin/elasticsearch-users useradd ${LOGSTASH_USER} -p ${LOGSTASH_PASSWORD} || echo "Logstash user already exists.";
        exec /usr/local/bin/docker-entrypoint.sh elasticsearch
      '
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl http://localhost:9200",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
  
  kibana:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://${LOCAL_INTERNAL_HOST}:9200
      - ELASTICSEARCH_USERNAME=${KIBANA_USER}
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=none
    mem_limit: ${MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  logstash:
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - 9600:9600
      - 5044:5044
    volumes:
      - ${PWD}/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    env_file:
      - ./.env
    environment:
      - MIKRO_ORM_HOST=postgres
      - ELASTICSEARCH_HOST=elastic:${ELASTIC_PASSWORD}@http://${LOCAL_INTERNAL_HOST}:9200
      - XPACK_MONITORING_ENABLED=false
    command: >
      bash -c '
        curl -L -o /usr/share/logstash/postgresql-${JDBC_VERSION}.jar https://jdbc.postgresql.org/download/postgresql-${JDBC_VERSION}.jar;
        /usr/share/logstash/bin/logstash -f /usr/share/logstash/pipeline/logstash.conf
      '

  screening-server:
    build:
      context: ./
      target: build
    ports:
      - 3000:3000
    environment:
      - MIKRO_ORM_HOST=postgres
    depends_on:
      - "postgres"
      - "kibana"
    env_file:
      - .env
    volumes:
      - ./src:/app/src
    command: nodemon -L

volumes:
  postgres-volume:
    driver: local
  esdata:
    driver: local
  kibanadata:
    driver: local